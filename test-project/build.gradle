plugins {
    id "com.google.osdetector" version "1.6.2" apply false
}

def setupGraalDependencies(String platform) {
    if ("$platform" != "mac" && "$platform" != "linux") {
        throw new GradleException("Platform $platform not supported")
    }

    def graalVM = new File("${System.properties['user.home']}/.gluon/substrate/graalvm")
    if (!graalVM.exists()) {
        graalVM.mkdirs()
    }
    def graalFolder = new File("$graalVM/graalvm-unknown-java11-19.3.0-dev")
    def name = "mac" == "$platform" ? "darwin-amd64" : "linux-x86_64"
    def graalZip = new File("$graalVM/graalvm-unknown-java11-19.3.0-dev-gvm-3-${name}.zip")
    if (!graalZip.exists()) {
        println "Downloading graalZip..."
        new URL("https://download2.gluonhq.com/substrate/graalvm/graalvm-unknown-java11-19.3.0-dev-gvm-3-${name}.zip")
                .withInputStream { i -> graalZip.withOutputStream { it << i } }
        copy {
            from zipTree(graalZip)
            into graalVM
        }
    }
    return "mac" == "$platform" ? "$graalFolder/Contents/Home" : "$graalFolder"
}

subprojects {
    apply plugin: 'com.google.osdetector'
    apply plugin: 'application'

    ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

    ext.java_home = hasProperty('org.gradle.java.home') ? getProperty('org.gradle.java.home') : System.getenv('JAVA_HOME')

    task setupDependencies(type: Exec) {
        def rootFile = new File(rootDir.getParent().concat("/build/"))
        def substratePath = rootFile.toString().concat("/classes/java/main") + ":" +
                rootFile.toString().concat("/resources/main")
        def target = System.getProperty("substrate.target")
        def argsList = ["${java_home}/bin/java", '-cp', substratePath]
        if (target != null) {
            argsList += ["-DtargetProfile=$target"]
        }
        argsList += ['com.gluonhq.substrate.SubstrateSetup']
        commandLine argsList
    }

    sourceCompatibility = 11
    targetCompatibility = 11
}


